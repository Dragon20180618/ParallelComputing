静态共享内存：
	__shared__ double s_x[128]
动态共享内存：
	调用核函数时<<<gridsize,blocksize,shared memory size>>>
	然后在核函数内部: extern __shared__ s_x[];
	不可以使用extern __share__ *s_x,因为数组和指针并不等价
无论使用什么 GPU 进行测试，使用动态共享内存的核函数和使用静态共享内存的核函
数在执行时间上都几乎没有差别。所以，使用动态共享内存不会影响程序性能，但有时候
可提高程序的可维护性。

避免在一个线程内，对数组进行32个间隔的取值。因为会引起bank冲突。

原子操作：解决可能冲突的数据操作
相加
atomicAdd(&a,b) 
将b的值加在a上